import{S as re,i as oe,s as ae,e as P,b as B,B as D,h as p,k as E,q as U,a as I,l as y,m as O,r as C,c as S,n as F,D as g,I as R,L as q,J as G,p as Z,M as ie,N as H,O as he}from"./index-ffa1d1d4.js";const se=()=>({white:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},red:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},green:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},blue:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)}}),K=[{name:"Negs",description:"Only -1",table:{white:{white:-1,red:-1,green:-1,blue:-1},red:{white:-1,red:-1,green:-1,blue:-1},green:{white:-1,red:-1,green:-1,blue:-1},blue:{white:-1,red:-1,green:-1,blue:-1}}},{name:"Infinite motion",description:"Some very simple patterns of reds chasing whites in a seemlingly infinite randomness",table:{white:{white:-1,red:-1,green:0,blue:-1},red:{white:2,red:-1,green:1,blue:-1},green:{white:0,red:0,green:-1,blue:-1},blue:{white:-1,red:-1,green:-1,blue:-1}}},{name:"No cohesion",description:"Cells of the same color repulse each other",table:{white:{white:-1,red:0,green:0,blue:0},red:{white:0,red:-1,green:0,blue:0},green:{white:0,red:0,green:-1,blue:0},blue:{white:0,red:0,green:0,blue:-1}}},{name:"Spray around",description:"All the cells repulse each others, resulting in an even repartition of the cells",table:{white:{white:-1,red:-1,green:-1,blue:-1},red:{white:-1,red:-1,green:-1,blue:-1},green:{white:-1,red:-1,green:-1,blue:-1},blue:{white:-1,red:-1,green:-1,blue:-1}}},{name:"Simple snake",description:"The colors attract each other in a circular manner creating some moving snakes",table:{white:{white:-1,red:1,green:0,blue:0},red:{white:0,red:-1,green:1,blue:0},green:{white:0,red:0,green:-1,blue:1},blue:{white:1,red:0,green:0,blue:-1}}},{name:"Fishes",description:"The cells regroup in moving structures with white/red head and blue/green tail swimming through the world.",table:{white:{white:0,red:1,green:-1,blue:-2},red:{white:2,red:0,green:1,blue:-1},green:{white:-2,red:-2,green:-2,blue:1},blue:{white:2,red:-1,green:1,blue:-2}}},{name:"Movers and stills",description:"Create some moving objects mainly drivent by green and red and some living but still objects made by white, blue and red. Sometimes the movers grab still objects.",table:{white:{white:1,red:-1,green:0,blue:1},red:{white:2,red:1,green:2,blue:-1},green:{white:-1,red:-1,green:1,blue:-1},blue:{white:1,red:2,green:0,blue:0}}},{name:"White pushers",description:"Create movers propelled by groups of white cells",table:{white:{white:1,red:1,green:2,blue:-1},red:{white:0,red:-1,green:2,blue:2},green:{white:-1,red:0,green:-1,blue:2},blue:{white:-1,red:1,green:1,blue:-1}}},{name:"Large vessels",description:"Create large gliders with branches. The cells are ordered white, blue, red green",table:{white:{white:0,red:1,green:0,blue:2},red:{white:0,red:1,green:1,blue:-1},green:{white:-1,red:1,green:0,blue:1},blue:{white:-1,red:2,green:2,blue:2}}},{name:"Universe",description:"Galaxies with blue center, red and white rings turning around evolving in a green goo",table:{white:{white:-1,red:1,green:1,blue:1},red:{white:-1,red:-1,green:-1,blue:2},green:{white:-2,red:-1,green:0,blue:-1},blue:{white:1,red:2,green:-2,blue:2}}}];function Q(n,e,l){const t=n.slice();return t[13]=e[l],t}function X(n,e,l){const t=n.slice();t[16]=e[l];const o=t[1].get(t[0][t[13]][t[16]]);return t[17]=o,t}function Y(n,e,l){const t=n.slice();return t[17]=e[l],t}function x(n){let e,l,t,o,a,b,h,r,f,s,c,m,T,v,M,i,_,w=n[2],k=[];for(let d=0;d<w.length;d+=1)k[d]=$(Y(n,w,d));let j=n[2],N=[];for(let d=0;d<j.length;d+=1)N[d]=te(Q(n,j,d));return{c(){e=E("div"),l=E("button"),t=U("Randomize table"),o=I(),a=E("button"),b=U("Zero table"),h=I(),r=E("button"),f=U("Mutate table"),s=I(),c=E("div"),m=E("span"),T=U("Attraction"),v=I();for(let d=0;d<k.length;d+=1)k[d].c();M=I();for(let d=0;d<N.length;d+=1)N[d].c();this.h()},l(d){e=y(d,"DIV",{});var A=O(e);l=y(A,"BUTTON",{});var u=O(l);t=C(u,"Randomize table"),u.forEach(p),o=S(A),a=y(A,"BUTTON",{});var L=O(a);b=C(L,"Zero table"),L.forEach(p),h=S(A),r=y(A,"BUTTON",{});var J=O(r);f=C(J,"Mutate table"),J.forEach(p),A.forEach(p),s=S(d),c=y(d,"DIV",{class:!0});var z=O(c);m=y(z,"SPAN",{});var W=O(m);T=C(W,"Attraction"),W.forEach(p),v=S(z);for(let V=0;V<k.length;V+=1)k[V].l(z);M=S(z);for(let V=0;V<N.length;V+=1)N[V].l(z);z.forEach(p),this.h()},h(){F(c,"class","grid5cols svelte-41p0gs")},m(d,A){B(d,e,A),g(e,l),g(l,t),g(e,o),g(e,a),g(a,b),g(e,h),g(e,r),g(r,f),B(d,s,A),B(d,c,A),g(c,m),g(m,T),g(c,v);for(let u=0;u<k.length;u+=1)k[u].m(c,null);g(c,M);for(let u=0;u<N.length;u+=1)N[u].m(c,null);i||(_=[R(l,"click",n[6]),R(a,"click",n[8]),R(r,"click",n[7])],i=!0)},p(d,A){if(A&4){w=d[2];let u;for(u=0;u<w.length;u+=1){const L=Y(d,w,u);k[u]?k[u].p(L,A):(k[u]=$(L),k[u].c(),k[u].m(c,M))}for(;u<k.length;u+=1)k[u].d(1);k.length=w.length}if(A&63){j=d[2];let u;for(u=0;u<j.length;u+=1){const L=Q(d,j,u);N[u]?N[u].p(L,A):(N[u]=te(L),N[u].c(),N[u].m(c,null))}for(;u<N.length;u+=1)N[u].d(1);N.length=j.length}},d(d){d&&p(e),d&&p(s),d&&p(c),q(k,d),q(N,d),i=!1,G(_)}}}function $(n){let e,l=n[17]+"",t;return{c(){e=E("button"),t=U(l),this.h()},l(o){e=y(o,"BUTTON",{style:!0});var a=O(e);t=C(a,l),a.forEach(p),this.h()},h(){Z(e,"background-color",n[17]),e.disabled=!0},m(o,a){B(o,e,a),g(e,t)},p:D,d(o){o&&p(e)}}}function ee(n){let e,l,t,o,a,b,h,r,f,s,c;function m(){return n[10](n[13],n[16])}function T(){return n[11](n[13],n[16])}function v(){return n[12](n[13],n[16])}return{c(){e=E("span"),l=E("button"),t=U("-"),o=I(),a=E("button"),b=I(),h=E("button"),r=U("+"),f=I(),this.h()},l(M){e=y(M,"SPAN",{class:!0});var i=O(e);l=y(i,"BUTTON",{});var _=O(l);t=C(_,"-"),_.forEach(p),o=S(i),a=y(i,"BUTTON",{style:!0}),O(a).forEach(p),b=S(i),h=y(i,"BUTTON",{});var w=O(h);r=C(w,"+"),w.forEach(p),f=S(i),i.forEach(p),this.h()},h(){Z(a,"background-color",n[17]),F(e,"class","grid1row3cols svelte-41p0gs")},m(M,i){B(M,e,i),g(e,l),g(l,t),g(e,o),g(e,a),g(e,b),g(e,h),g(h,r),g(e,f),s||(c=[R(l,"click",m),R(a,"click",T),R(h,"click",v)],s=!0)},p(M,i){n=M,i&1&&Z(a,"background-color",n[17])},d(M){M&&p(e),s=!1,G(c)}}}function te(n){let e,l=n[13]+"",t,o,a,b=n[2],h=[];for(let r=0;r<b.length;r+=1)h[r]=ee(X(n,b,r));return{c(){e=E("button"),t=U(l),o=I();for(let r=0;r<h.length;r+=1)h[r].c();a=P(),this.h()},l(r){e=y(r,"BUTTON",{style:!0});var f=O(e);t=C(f,l),f.forEach(p),o=S(r);for(let s=0;s<h.length;s+=1)h[s].l(r);a=P(),this.h()},h(){Z(e,"background-color",n[13]),e.disabled=!0},m(r,f){B(r,e,f),g(e,t),B(r,o,f);for(let s=0;s<h.length;s+=1)h[s].m(r,f);B(r,a,f)},p(r,f){if(f&63){b=r[2];let s;for(s=0;s<b.length;s+=1){const c=X(r,b,s);h[s]?h[s].p(c,f):(h[s]=ee(c),h[s].c(),h[s].m(a.parentNode,a))}for(;s<h.length;s+=1)h[s].d(1);h.length=b.length}},d(r){r&&p(e),r&&p(o),q(h,r),r&&p(a)}}}function ce(n){let e,l=n[0]&&x(n);return{c(){l&&l.c(),e=P()},l(t){l&&l.l(t),e=P()},m(t,o){l&&l.m(t,o),B(t,e,o)},p(t,[o]){t[0]?l?l.p(t,o):(l=x(t),l.c(),l.m(e.parentNode,e)):l&&(l.d(1),l=null)},i:D,o:D,d(t){l&&l.d(t),t&&p(e)}}}function de(n,e,l){let{attractionTable:t}=e,{onUpdateTable:o}=e;const a=new Map([[-2,"#ff0000"],[-1,"#ff7d7d"],[0,"#000000"],[1,"#7dff7d"],[2,"#00ff00"]]),b=["white","red","green","blue"],h=(i,_)=>{let w=t[i][_];w++,w===3&&(w=-2),l(0,t[i][_]=w,t),o(t)},r=(i,_)=>{let w=t[i][_];w++,w===3&&(w=2),l(0,t[i][_]=w,t),o(t)},f=(i,_)=>{let w=t[i][_];w--,w===-3&&(w=-2),l(0,t[i][_]=w,t),o(t)},s=()=>{for(const i of Object.keys(t))for(const _ of Object.keys(t[i])){const w=Math.floor(Math.random()*5)-2;l(0,t[i][_]=w,t)}o(t)},c=()=>{const i=Math.floor(Math.random()*b.length),_=b[i],w=Math.floor(Math.random()*b.length),k=b[w],j=Math.floor(Math.random()*5)-2;l(0,t[_][k]=j,t),o(t)},m=()=>{for(const i of Object.keys(t))for(const _ of Object.keys(t[i]))l(0,t[i][_]=0,t);o(t)},T=(i,_)=>f(i,_),v=(i,_)=>h(i,_),M=(i,_)=>r(i,_);return n.$$set=i=>{"attractionTable"in i&&l(0,t=i.attractionTable),"onUpdateTable"in i&&l(9,o=i.onUpdateTable)},[t,a,b,h,r,f,s,c,m,o,T,v,M]}class ge extends re{constructor(e){super(),oe(this,e,de,ce,ae,{attractionTable:0,onUpdateTable:9})}}function le(n,e,l){const t=n.slice();return t[4]=e[l],t}function ne(n){let e,l=n[4].name+"",t,o,a=n[4].description+"",b,h;return{c(){e=E("option"),t=U(l),o=U(` -
                `),b=U(a),h=I(),this.h()},l(r){e=y(r,"OPTION",{});var f=O(e);t=C(f,l),o=C(f,` -
                `),b=C(f,a),h=S(f),f.forEach(p),this.h()},h(){e.__value=n[4].table,e.value=e.__value},m(r,f){B(r,e,f),g(e,t),g(e,o),g(e,b),g(e,h)},p:D,d(r){r&&p(e)}}}function ue(n){let e,l,t,o,a,b,h,r,f,s=K,c=[];for(let m=0;m<s.length;m+=1)c[m]=ne(le(n,s,m));return{c(){e=E("div"),l=E("label"),t=U("Select a new attraction table"),o=I(),a=E("select"),b=E("option"),h=U("Random - A randomly generated table");for(let m=0;m<c.length;m+=1)c[m].c();this.h()},l(m){e=y(m,"DIV",{});var T=O(e);l=y(T,"LABEL",{for:!0});var v=O(l);t=C(v,"Select a new attraction table"),v.forEach(p),o=S(T),a=y(T,"SELECT",{});var M=O(a);b=y(M,"OPTION",{});var i=O(b);h=C(i,"Random - A randomly generated table"),i.forEach(p);for(let _=0;_<c.length;_+=1)c[_].l(M);M.forEach(p),T.forEach(p),this.h()},h(){F(l,"for","tables"),b.__value=se(),b.value=b.__value,n[1]===void 0&&ie(()=>n[2].call(a))},m(m,T){B(m,e,T),g(e,l),g(l,t),g(e,o),g(e,a),g(a,b),g(b,h);for(let v=0;v<c.length;v+=1)c[v].m(a,null);H(a,n[1]),r||(f=[R(a,"change",n[2]),R(a,"change",n[3])],r=!0)},p(m,[T]){if(T&0){s=K;let v;for(v=0;v<s.length;v+=1){const M=le(m,s,v);c[v]?c[v].p(M,T):(c[v]=ne(M),c[v].c(),c[v].m(a,null))}for(;v<c.length;v+=1)c[v].d(1);c.length=s.length}T&2&&H(a,m[1])},i:D,o:D,d(m){m&&p(e),q(c,m),r=!1,G(f)}}}function be(n,e,l){let t,{updateTable:o}=e;function a(){t=he(this),l(1,t)}const b=()=>o(t);return n.$$set=h=>{"updateTable"in h&&l(0,o=h.updateTable)},[o,t,a,b]}class _e extends re{constructor(e){super(),oe(this,e,be,ue,ae,{updateTable:0})}}export{_e as A,ge as a,se as g};
