import{S as ee,i as te,s as le,e as q,b as C,B as P,h as _,k,q as I,a as E,l as y,m as N,r as S,c as U,n as x,D as f,I as R,L as Z,J as $,p as L}from"./index-689c9b92.js";const ae=()=>({white:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},red:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},green:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},blue:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)}}),ie=[{name:"Negs",description:"Only -1",table:{white:{white:-1,red:-1,green:-1,blue:-1},red:{white:-1,red:-1,green:-1,blue:-1},green:{white:-1,red:-1,green:-1,blue:-1},blue:{white:-1,red:-1,green:-1,blue:-1}}},{name:"Infinite motion",description:"Some very simple patterns of reds chasing whites in a seemlingly infinite randomness",table:{white:{white:-1,red:-1,green:0,blue:-1},red:{white:2,red:-1,green:1,blue:-1},green:{white:0,red:0,green:-1,blue:-1},blue:{white:-1,red:-1,green:-1,blue:-1}}},{name:"No cohesion",description:"Cells of the same color repulse each other",table:{white:{white:-1,red:0,green:0,blue:0},red:{white:0,red:-1,green:0,blue:0},green:{white:0,red:0,green:-1,blue:0},blue:{white:0,red:0,green:0,blue:-1}}},{name:"Spray around",description:"All the cells repulse each others, resulting in an even repartition of the cells",table:{white:{white:-1,red:-1,green:-1,blue:-1},red:{white:-1,red:-1,green:-1,blue:-1},green:{white:-1,red:-1,green:-1,blue:-1},blue:{white:-1,red:-1,green:-1,blue:-1}}},{name:"Simple snake",description:"The colors attract each other in a circular manner creating some moving snakes",table:{white:{white:-1,red:1,green:0,blue:0},red:{white:0,red:-1,green:1,blue:0},green:{white:0,red:0,green:-1,blue:1},blue:{white:1,red:0,green:0,blue:-1}}},{name:"Fishes",description:"The cells regroup in moving structures with white/red head and blue/green tail swimming through the world.",table:{white:{white:0,red:1,green:-1,blue:-2},red:{white:2,red:0,green:1,blue:-1},green:{white:-2,red:-2,green:-2,blue:1},blue:{white:2,red:-1,green:1,blue:-2}}},{name:"Movers and stills",description:"Create some moving objects mainly drivent by green and red and some living but still objects made by white, blue and red. Sometimes the movers grab still objects.",table:{white:{white:1,red:-1,green:0,blue:1},red:{white:2,red:1,green:2,blue:-1},green:{white:-1,red:-1,green:1,blue:-1},blue:{white:1,red:2,green:0,blue:0}}},{name:"White pushers",description:"Create movers propelled by groups of white cells",table:{white:{white:1,red:1,green:2,blue:-1},red:{white:0,red:-1,green:2,blue:2},green:{white:-1,red:0,green:-1,blue:2},blue:{white:-1,red:1,green:1,blue:-1}}},{name:"Large vessels",description:"Create large gliders with branches. The cells are ordered white, blue, red green",table:{white:{white:0,red:1,green:0,blue:2},red:{white:0,red:1,green:1,blue:-1},green:{white:-1,red:1,green:0,blue:1},blue:{white:-1,red:2,green:2,blue:2}}}];function W(n,t,l){const e=n.slice();return e[13]=t[l],e}function G(n,t,l){const e=n.slice();e[16]=t[l];const s=e[1].get(e[0][e[13]][e[16]]);return e[17]=s,e}function H(n,t,l){const e=n.slice();return e[17]=t[l],e}function K(n){let t,l,e,s,d,w,c,o,g,h,m,O,j,z,v,r,b,u=n[2],p=[];for(let a=0;a<u.length;a+=1)p[a]=Q(H(n,u,a));let A=n[2],M=[];for(let a=0;a<A.length;a+=1)M[a]=Y(W(n,A,a));return{c(){t=k("div"),l=k("button"),e=I("Randomize table"),s=E(),d=k("button"),w=I("Zero table"),c=E(),o=k("button"),g=I("Mutate table"),h=E(),m=k("div"),O=k("span"),j=I("Attraction"),z=E();for(let a=0;a<p.length;a+=1)p[a].c();v=E();for(let a=0;a<M.length;a+=1)M[a].c();this.h()},l(a){t=y(a,"DIV",{});var T=N(t);l=y(T,"BUTTON",{});var i=N(l);e=S(i,"Randomize table"),i.forEach(_),s=U(T),d=y(T,"BUTTON",{});var B=N(d);w=S(B,"Zero table"),B.forEach(_),c=U(T),o=y(T,"BUTTON",{});var F=N(o);g=S(F,"Mutate table"),F.forEach(_),T.forEach(_),h=U(a),m=y(a,"DIV",{class:!0});var D=N(m);O=y(D,"SPAN",{});var J=N(O);j=S(J,"Attraction"),J.forEach(_),z=U(D);for(let V=0;V<p.length;V+=1)p[V].l(D);v=U(D);for(let V=0;V<M.length;V+=1)M[V].l(D);D.forEach(_),this.h()},h(){x(m,"class","grid5cols svelte-41p0gs")},m(a,T){C(a,t,T),f(t,l),f(l,e),f(t,s),f(t,d),f(d,w),f(t,c),f(t,o),f(o,g),C(a,h,T),C(a,m,T),f(m,O),f(O,j),f(m,z);for(let i=0;i<p.length;i+=1)p[i].m(m,null);f(m,v);for(let i=0;i<M.length;i+=1)M[i].m(m,null);r||(b=[R(l,"click",n[6]),R(d,"click",n[8]),R(o,"click",n[7])],r=!0)},p(a,T){if(T&4){u=a[2];let i;for(i=0;i<u.length;i+=1){const B=H(a,u,i);p[i]?p[i].p(B,T):(p[i]=Q(B),p[i].c(),p[i].m(m,v))}for(;i<p.length;i+=1)p[i].d(1);p.length=u.length}if(T&63){A=a[2];let i;for(i=0;i<A.length;i+=1){const B=W(a,A,i);M[i]?M[i].p(B,T):(M[i]=Y(B),M[i].c(),M[i].m(m,null))}for(;i<M.length;i+=1)M[i].d(1);M.length=A.length}},d(a){a&&_(t),a&&_(h),a&&_(m),Z(p,a),Z(M,a),r=!1,$(b)}}}function Q(n){let t,l=n[17]+"",e;return{c(){t=k("button"),e=I(l),this.h()},l(s){t=y(s,"BUTTON",{style:!0});var d=N(t);e=S(d,l),d.forEach(_),this.h()},h(){L(t,"background-color",n[17]),t.disabled=!0},m(s,d){C(s,t,d),f(t,e)},p:P,d(s){s&&_(t)}}}function X(n){let t,l,e,s,d,w,c,o,g,h,m;function O(){return n[10](n[13],n[16])}function j(){return n[11](n[13],n[16])}function z(){return n[12](n[13],n[16])}return{c(){t=k("span"),l=k("button"),e=I("-"),s=E(),d=k("button"),w=E(),c=k("button"),o=I("+"),g=E(),this.h()},l(v){t=y(v,"SPAN",{class:!0});var r=N(t);l=y(r,"BUTTON",{});var b=N(l);e=S(b,"-"),b.forEach(_),s=U(r),d=y(r,"BUTTON",{style:!0}),N(d).forEach(_),w=U(r),c=y(r,"BUTTON",{});var u=N(c);o=S(u,"+"),u.forEach(_),g=U(r),r.forEach(_),this.h()},h(){L(d,"background-color",n[17]),x(t,"class","grid1row3cols svelte-41p0gs")},m(v,r){C(v,t,r),f(t,l),f(l,e),f(t,s),f(t,d),f(t,w),f(t,c),f(c,o),f(t,g),h||(m=[R(l,"click",O),R(d,"click",j),R(c,"click",z)],h=!0)},p(v,r){n=v,r&1&&L(d,"background-color",n[17])},d(v){v&&_(t),h=!1,$(m)}}}function Y(n){let t,l=n[13]+"",e,s,d,w=n[2],c=[];for(let o=0;o<w.length;o+=1)c[o]=X(G(n,w,o));return{c(){t=k("button"),e=I(l),s=E();for(let o=0;o<c.length;o+=1)c[o].c();d=q(),this.h()},l(o){t=y(o,"BUTTON",{style:!0});var g=N(t);e=S(g,l),g.forEach(_),s=U(o);for(let h=0;h<c.length;h+=1)c[h].l(o);d=q(),this.h()},h(){L(t,"background-color",n[13]),t.disabled=!0},m(o,g){C(o,t,g),f(t,e),C(o,s,g);for(let h=0;h<c.length;h+=1)c[h].m(o,g);C(o,d,g)},p(o,g){if(g&63){w=o[2];let h;for(h=0;h<w.length;h+=1){const m=G(o,w,h);c[h]?c[h].p(m,g):(c[h]=X(m),c[h].c(),c[h].m(d.parentNode,d))}for(;h<c.length;h+=1)c[h].d(1);c.length=w.length}},d(o){o&&_(t),o&&_(s),Z(c,o),o&&_(d)}}}function re(n){let t,l=n[0]&&K(n);return{c(){l&&l.c(),t=q()},l(e){l&&l.l(e),t=q()},m(e,s){l&&l.m(e,s),C(e,t,s)},p(e,[s]){e[0]?l?l.p(e,s):(l=K(e),l.c(),l.m(t.parentNode,t)):l&&(l.d(1),l=null)},i:P,o:P,d(e){l&&l.d(e),e&&_(t)}}}function ne(n,t,l){let{attractionTable:e}=t,{onUpdateTable:s}=t;const d=new Map([[-2,"#ff0000"],[-1,"#ff7d7d"],[0,"#000000"],[1,"#7dff7d"],[2,"#00ff00"]]),w=["white","red","green","blue"],c=(r,b)=>{let u=e[r][b];u++,u===3&&(u=-2),l(0,e[r][b]=u,e),s(e)},o=(r,b)=>{let u=e[r][b];u++,u===3&&(u=2),l(0,e[r][b]=u,e),s(e)},g=(r,b)=>{let u=e[r][b];u--,u===-3&&(u=-2),l(0,e[r][b]=u,e),s(e)},h=()=>{for(const r of Object.keys(e))for(const b of Object.keys(e[r])){const u=Math.floor(Math.random()*5)-2;l(0,e[r][b]=u,e)}s(e)},m=()=>{const r=Math.floor(Math.random()*w.length),b=w[r],u=Math.floor(Math.random()*w.length),p=w[u],A=Math.floor(Math.random()*5)-2;l(0,e[b][p]=A,e),s(e)},O=()=>{for(const r of Object.keys(e))for(const b of Object.keys(e[r]))l(0,e[r][b]=0,e);s(e)},j=(r,b)=>g(r,b),z=(r,b)=>c(r,b),v=(r,b)=>o(r,b);return n.$$set=r=>{"attractionTable"in r&&l(0,e=r.attractionTable),"onUpdateTable"in r&&l(9,s=r.onUpdateTable)},[e,d,w,c,o,g,h,m,O,s,j,z,v]}class se extends ee{constructor(t){super(),te(this,t,ne,re,le,{attractionTable:0,onUpdateTable:9})}}export{se as A,ae as g,ie as t};
