var v=Object.defineProperty;var S=(n,e,t)=>e in n?v(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var g=(n,e,t)=>(S(n,typeof e!="symbol"?e+"":e,t),t);import{_}from"./preload-helper-41c905a7.js";import{S as I,i as E,s as k,k as D,l as B,m as A,h as m,n as M,b as T,L as z,B as b,M as F,o as N}from"./index-71905c10.js";function j(n){let e,t,r;return{c(){e=D("div"),this.h()},l(o){e=B(o,"DIV",{style:!0,class:!0}),A(e).forEach(m),this.h()},h(){M(e,"style",n[0]),M(e,"class","m-0")},m(o,s){T(o,e,s),t||(r=z(n[1].call(null,e)),t=!0)},p(o,[s]){s&1&&M(e,"style",o[0])},i:b,o:b,d(o){o&&m(e),t=!1,r()}}}function V(n,e){return e.forEach(([t,r])=>n[t]=r),n}function L(n,e,t){let{target:r=void 0}=e,{sketch:o=void 0}=e,{parentDivStyle:s="display: block;"}=e,{debug:i=!1}=e,h;const u=F(),l={ref(){u("ref",r)},instance(){u("instance",h)}};function c(a){return t(2,r=a),{destroy(){t(2,r=void 0)}}}return N(async()=>{const a=await _(()=>import("./p5.min-7dea8225.js").then(d=>d.p),[],import.meta.url),{default:f}=a,y=Object.entries(a).filter(([d,C])=>C instanceof Function&&d[0]!=="_"&&d!=="default");i&&console.log("available p5 native classes",y),h=new f(d=>(d=V(d,y),i&&console.log("p5 instance",d),window._p5Instance=d,o(d)),r),l.ref(),l.instance()}),n.$$set=a=>{"target"in a&&t(2,r=a.target),"sketch"in a&&t(3,o=a.sketch),"parentDivStyle"in a&&t(0,s=a.parentDivStyle),"debug"in a&&t(4,i=a.debug)},[s,c,r,o,i]}class U extends I{constructor(e){super(),E(this,e,L,j,k,{target:2,sketch:3,parentDivStyle:0,debug:4})}}const Z=()=>({white:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},red:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},green:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)},blue:{white:Math.floor(Math.random()*4-1),red:Math.floor(Math.random()*4-1),green:Math.floor(Math.random()*4-1),blue:Math.floor(Math.random()*4-1)}}),P=()=>({white:{white:-1,red:-1,green:0,blue:-1},red:{white:2,red:-1,green:1,blue:-1},green:{white:0,red:0,green:-1,blue:-1},blue:{white:-1,red:-1,green:-1,blue:-1}}),$=()=>({white:{white:-1,red:0,green:0,blue:0},red:{white:0,red:-1,green:0,blue:0},green:{white:0,red:0,green:-1,blue:0},blue:{white:0,red:0,green:0,blue:-1}}),ee=()=>({white:{white:-1,red:1,green:0,blue:0},red:{white:0,red:-1,green:1,blue:0},green:{white:0,red:0,green:-1,blue:1},blue:{white:1,red:0,green:0,blue:-1}}),te=()=>({white:{white:0,red:1,green:-1,blue:-2},red:{white:2,red:0,green:1,blue:-1},green:{white:-2,red:-2,green:-2,blue:1},blue:{white:2,red:-1,green:1,blue:-2}}),O=(n,e,t,r,o)=>{const s=W(n,r.pos,o.pos);if(s>t)return 0;if(s<t/2)return w(s,0,t/2,-1,0);const i=e[r.color][o.color]??0;return i===0?0:R(s,t/2,t,0,i)},R=function(n,e,t,r,o){const s=e+(t-e)/2;return n<s?w(n,e,s,r,o):w(n,s,t,o,r)},w=function(n,e,t,r,o){const s=(n-e)/(t-e)*(o-r)+r;return r<o?p(s,r,o):p(s,o,r)},p=function(n,e,t){return Math.max(Math.min(n,t),e)};class X{constructor(e){g(this,"squares");g(this,"squareByCellId");g(this,"worldSize");g(this,"maxAttractionRadius");const{worldSize:t,maxAttractionRadius:r}=e;if(t.x%r!==0||t.y%r!==0)throw new Error("Screen size is not a multiple of maxAttractionRadius");this.worldSize={...t},this.maxAttractionRadius=r,this.squareByCellId=new Map,this.squares=[];const o=r,s=t.x/o,i=t.y/o;for(let h=0;h<i;h++){this.squares.push([]);for(let u=0;u<s;u++)this.squares[h].push(new Set)}}checkCoord(e){if(e.x<0||e.x>this.worldSize.x||e.y<0||e.y>this.worldSize.y)throw new Error(`The cell at position ${e.x},${e.y} is outside of the screen ${this.worldSize.x},${this.worldSize.y} `)}getSquareCoords(e){return this.checkCoord(e),{x:Math.floor(e.x*this.squares[0].length/this.worldSize.x),y:Math.floor(e.y*this.squares.length/this.worldSize.y)}}insert(e){if(this.squareByCellId.get(e.id))throw new Error("Cell already in map");const t=this.getSquareCoords(e.pos);this.squares[t.y][t.x].add(e.id),this.squareByCellId.set(e.id,t)}updateCell(e){this.checkCoord(e.pos);const t=this.squareByCellId.get(e.id);if(!t)throw new Error("Cell not in map");this.squares[t.y][t.x].delete(e.id);const r=this.getSquareCoords(e.pos);this.squares[r.y][r.x].add(e.id),this.squareByCellId.set(e.id,r)}getNeighborsIds(e){const t=this.squareByCellId.get(e.id);if(!t)throw new Error("Cell not in map");const{x:r,y:o}=t,s=r===0?this.squares[0].length-1:r-1,i=r===this.squares[0].length-1?0:r+1,h=o===0?this.squares.length-1:o-1,u=o===this.squares.length-1?0:o+1,l=[{x:s,y:h},{x:r,y:h},{x:i,y:h},{x:s,y:o},{x:r,y:o},{x:i,y:o},{x:s,y:u},{x:r,y:u},{x:i,y:u}],c=[];for(const{x:a,y:f}of l)c.push(...this.squares[f][a]);return c}}const q=["white","red","green","blue"],Y=()=>{const n=Math.floor(Math.random()*q.length);return q[n]},re=(n,e,t)=>{const r=[],o=new X({worldSize:n,maxAttractionRadius:t});for(let s=0;s<e;s++){const i={id:s,pos:{x:Math.random()*n.x,y:Math.random()*n.y},vel:{x:0,y:0},color:Y()};r.push(i),o.insert(i)}return{cells:r,cellsMap:o}},W=(n,e,t)=>{let r=Math.abs(t.x-e.x);r>n.x/2&&(r=n.x-r);let o=Math.abs(t.y-e.y);return o>n.y/2&&(o=n.y-o),Math.sqrt(r*r+o*o)},G=(n,e)=>{const t=Math.abs(e.x-n.x),r=Math.abs(e.y-n.y);return t*t+r*r},ne=(n,e,t,r)=>{for(let o=0;o<t.length;o++){const s=t[o];s.vel={x:0,y:0};const i=r.getNeighborsIds(s);for(const u of i){if(o===u)continue;const l=t[u];let c=O(r.worldSize,n,e,s,l);G(s.pos,l.pos)>r.worldSize.y*r.worldSize.y/2&&(c*=-1);const a={x:l.pos.x-s.pos.x,y:l.pos.y-s.pos.y},f=Math.sqrt(a.x*a.x+a.y*a.y);if(f===0)continue;const x={x:a.x*(1/f),y:a.y*(1/f)},y={x:x.x*c,y:x.y*c};s.vel.x+=y.x,s.vel.y+=y.y}const h=Math.sqrt(s.vel.x*s.vel.x+s.vel.y*s.vel.y);h!==0&&(s.vel.x*=1/h,s.vel.y*=1/h,H(r.worldSize,s),r.updateCell(s))}},H=(n,e)=>{e.pos.x+=e.vel.x,e.pos.y+=e.vel.y,e.pos.x<=0?e.pos.x=n.x+e.pos.x:e.pos.x>=n.x&&(e.pos.x=e.pos.x-n.x),e.pos.y<=0?e.pos.y=n.y+e.pos.y:e.pos.y>=n.y&&(e.pos.y=e.pos.y-n.y)};export{U as P,Z as a,P as b,$ as c,ee as d,te as e,W as f,re as g,ne as u};
